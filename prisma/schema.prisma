// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  gh_username   String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Site {
  id                String       @id @default(cuid())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  createdBy         String
  repoLink          String
  siteSlug          String       @unique @default(cuid())
  siteName          String
  docsFolder        String       @default("docs")
  siteDescription   String
  ogImageUrl        String
  web3formsKey      String?
  gitHubAccessToken String?
  feedbacks         Feedback[]
  customHead        String?
  homePage          String?      @db.LongText
  navbarCta         String?
  navbarLinks       NavbarLink[]
  announcement      String?
  blogs             Blog[]
}

model NavbarLink {
  id       String @id @default(cuid())
  siteId   String
  site     Site   @relation(fields: [siteId], references: [id], onDelete: Cascade)
  link     String
  linkText String
}

model Feedback {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  siteId        String
  site          Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)
  feedback      String
  submittedFrom String?
  stars         Int
  sentBy        String?
}

model Blog {
  id          String   @id @default(cuid())
  slug        String?  @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  siteId      String
  site        Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)
  title       String
  description String   @db.LongText
  ogImageUrl  String?
  content     String?  @default("") @db.LongText
  postedBy    String   @default("")
  published   Boolean  @default(false)
}
